{"version":3,"sources":["components/index.js","components/form.js","components/jumbotron.js","App.js","reportWebVitals.js","index.js"],"names":["minmaxTemp","min","max","className","Weather","props","style","textAlign","city","weatherIcon","temp_fahrenheit","temp_min","temp_max","description","Form","error","role","onSubmit","loadweather","type","name","autoComplete","placeholder","Jumbotron","color","fontSize","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","process","API_call","json","response","console","log","setState","sys","fahrenheit","calFahrenheit","main","temp","weather","get_WeatherIcon","id","state","undefined","icon","Thunderstorm","Rain","Snow","Clear","Clouds","Math","floor","icons","rangeID","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28d3c43d.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Weather(props) {\n    return (\n        <>\n            <div className=\"container\" style={{textAlign: \"center\"}}>\n                <div className=\"cards pt-4\">\n                    <h1>{props.city}</h1>\n                    <h5 className=\"py-4\">\n                        <i className={`fas ${props.weatherIcon} fa-4x`}></i>\n                    </h5>\n\n\n                    {props.temp_fahrenheit ? (<h1 className=\"py-2\">{props.temp_fahrenheit}&deg;</h1>) : null}\n\n                    {/* show max and min tempurature */}\n                    {minmaxTemp(props.temp_min, props.temp_max)}\n\n                    <h4 className=\"py-3\">{props.description}</h4>\n                </div>\n            </div>\n        </>\n    );\n};\n\nfunction minmaxTemp(min, max) {\n    if (min && max) {\n        return (\n            <h3>\n                <span className=\"px-4\">L:{min}&deg;</span>\n                <span className=\"px-4\">H:{max}&deg;</span>\n            </h3>\n        );\n    }\n}\n\nexport default Weather;","import React from \"react\";\nimport \"./style.css\";\n\nconst Form = props => {\n    return(\n        <>\n        <div className=\"container\">\n            <div>{props.error?error(): null}</div>\n        <form onSubmit={props.loadweather}>\n            <div className=\"row\">\n                <div className=\"col-md-3 offset-md-2\">\n                    <input type=\"text\" className=\"form-control\" name=\"city\" autoComplete=\"off\" placeholder=\"City\"></input>\n                </div>\n                <div className=\"col-md-3\">\n                    <input type=\"text\" className=\"form-control\" name=\"country\" autoComplete=\"off\" placeholder=\"Country\"></input>  \n                </div>\n                <div className=\"col-md-3 mt-md-0 text-md-left\">\n                    <button className=\"btn btn-primary\">Get Weather</button>\n                </div>\n            </div>\n        </form>\n        </div>\n        </>\n    );\n};\n\nfunction error() {\n    return(\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">Please Enter City and Country</div>\n    );\n}\n\nexport default Form;","import React from \"react\";\n\nfunction Jumbotron() {\n    return (\n        <>\n            <div className=\"jumbotron jumbotron-fluid\" style={{textAlign: \"center\", color: \"blue\"}}>\n                <div className=\"container\">\n                    <h1 className=\"display-4\" style={{fontSize: \"60px\"}}>Weather App</h1>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Jumbotron;","import React, { Component } from \"react\";\nimport Weather from \"./components/index\";\nimport Form from \"./components/form\";\nimport Jumbotron from \"./components/jumbotron\";\n\nconst API_KEY= process.env.REACT_APP_WEATHER_API_KEY;\n\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      fahrenheit: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false,\n    };\n\n    this.weatherIcon = {\n      Thunderstorm: \"fa-bolt\",\n      Rain: \"fa-cloud-showers-heavy\",\n      Snow: \"fa-snowflake\",\n      Clear: \"fa-sun\",\n      Clouds: \"fa-cloud\",\n    }\n  }\n\n  calFahrenheit(temp){\n    let fahrenheit = Math.floor(temp - 273.15) * (9.0 / 5.0) + 32;\n    return fahrenheit;\n  }\n\n  get_WeatherIcon(icons, rangeID){\n    // eslint-disable-next-line default-case\n    switch(true){\n      case rangeID >= 200 && rangeID <= 232:\n        this.setState({icon: this.weatherIcon.Thunderstorm});\n        break;\n      // eslint-disable-next-line no-duplicate-case\n      case rangeID >= 500 && rangeID <= 531:\n      this.setState({icon: this.weatherIcon.Rain});\n      break;\n      // eslint-disable-next-line no-duplicate-case\n      case rangeID >= 600 && rangeID <= 622:\n      this.setState({icon: this.weatherIcon.Snow});\n      break;\n      // eslint-disable-next-line no-duplicate-case\n      case rangeID === 800:\n      this.setState({icon: this.weatherIcon.Clear});\n      break;\n      // eslint-disable-next-line no-duplicate-case\n      case rangeID >= 801 && rangeID <= 804:\n      this.setState({icon: this.weatherIcon.Clouds});\n      break;\n      default: \n      this.setState({icon: this.weatherIcon.Clouds});\n    }\n  }\n\n  getWeather = async(e) => {\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n  if(city && country){\n    const API_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n\n    const response = await API_call.json();\n\n    console.log(response);\n\n    this.setState({\n      city: `${response.name}, ${response.sys.country}`,\n      fahrenheit: this.calFahrenheit(response.main.temp),\n      temp_max: this.calFahrenheit(response.main.temp_max),\n      temp_min: this.calFahrenheit(response.main.temp_min),\n      description: response.weather[0].description,\n    });\n\n    this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n    }else{\n      this.setState({error: true});\n    }\n  };\n\n\n  render() {\n    return(\n    <div className=\"App\">\n      <Jumbotron/>\n      <Form loadweather={this.getWeather} error={this.state.error} />\n      <Weather \n      city={this.state.city} \n      country={this.state.country}\n      temp_fahrenheit={this.state.fahrenheit}  \n      temp_max={this.state.temp_max}\n      temp_min={this.state.temp_min}\n      description={this.state.description}\n      weatherIcon= {this.state.icon}\n      />\n    </div>\n\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}